// <auto-generated />
using System;
using CarShowRoomProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarShowRoomProject.Migrations
{
    [DbContext(typeof(CarShowRoomDbContext))]
    partial class CarShowRoomDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarShowRoomProject.Models.Administrator", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("Administrator");
                });

            modelBuilder.Entity("CarShowRoomProject.Models.BookedCar", b =>
                {
                    b.Property<int>("BookedCarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookedCarId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("BookingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("BookedCarId");

                    b.HasIndex("CarId");

                    b.HasIndex("ClientId");

                    b.ToTable("BookedCar");
                });

            modelBuilder.Entity("CarShowRoomProject.Models.BrandCar", b =>
                {
                    b.Property<int>("BrandCarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandCarId"));

                    b.Property<string>("BrandCarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModelCarId")
                        .HasColumnType("int");

                    b.HasKey("BrandCarId");

                    b.HasIndex("ModelCarId");

                    b.ToTable("BrandCar");
                });

            modelBuilder.Entity("CarShowRoomProject.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"));

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<float>("EngineCapacity")
                        .HasColumnType("real");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<int?>("PictureId")
                        .HasColumnType("int");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TransmissionId")
                        .HasColumnType("int");

                    b.Property<int>("TypeEngineId")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.HasIndex("BrandId");

                    b.HasIndex("PictureId");

                    b.HasIndex("TransmissionId");

                    b.HasIndex("TypeEngineId");

                    b.HasIndex("YearId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("CarShowRoomProject.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("CarShowRoomProject.Models.ModelCar", b =>
                {
                    b.Property<int>("ModelCarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelCarId"));

                    b.Property<string>("ModelCarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModelCarId");

                    b.ToTable("ModelCar");
                });

            modelBuilder.Entity("CarShowRoomProject.Models.PictureCar", b =>
                {
                    b.Property<int>("PictureCarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PictureCarId"));

                    b.Property<byte[]>("PictureOne")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PictureThree")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PictureTwo")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("PictureCarId");

                    b.ToTable("PictureCar");
                });

            modelBuilder.Entity("CarShowRoomProject.Models.TransmissionCar", b =>
                {
                    b.Property<int>("TransmissionCarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransmissionCarId"));

                    b.Property<string>("TransmissionCarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransmissionCarId");

                    b.ToTable("TransmissionCar");
                });

            modelBuilder.Entity("CarShowRoomProject.Models.TypeEngine", b =>
                {
                    b.Property<int>("TypeEngineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeEngineId"));

                    b.Property<string>("TypeEngineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeEngineId");

                    b.ToTable("TypeEngine");
                });

            modelBuilder.Entity("CarShowRoomProject.Models.YearRelease", b =>
                {
                    b.Property<int>("YearReleaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YearReleaseId"));

                    b.Property<int>("YearReleaseName")
                        .HasColumnType("int");

                    b.HasKey("YearReleaseId");

                    b.ToTable("YearRelease");
                });

            modelBuilder.Entity("CarShowRoomProject.Models.BookedCar", b =>
                {
                    b.HasOne("CarShowRoomProject.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarShowRoomProject.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CarShowRoomProject.Models.BrandCar", b =>
                {
                    b.HasOne("CarShowRoomProject.Models.ModelCar", "ModelCar")
                        .WithMany()
                        .HasForeignKey("ModelCarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModelCar");
                });

            modelBuilder.Entity("CarShowRoomProject.Models.Car", b =>
                {
                    b.HasOne("CarShowRoomProject.Models.BrandCar", "BrandCar")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarShowRoomProject.Models.PictureCar", "PictureCar")
                        .WithMany()
                        .HasForeignKey("PictureId");

                    b.HasOne("CarShowRoomProject.Models.TransmissionCar", "TransmissionCar")
                        .WithMany()
                        .HasForeignKey("TransmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarShowRoomProject.Models.TypeEngine", "TypeEngine")
                        .WithMany()
                        .HasForeignKey("TypeEngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarShowRoomProject.Models.YearRelease", "YearRelease")
                        .WithMany()
                        .HasForeignKey("YearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BrandCar");

                    b.Navigation("PictureCar");

                    b.Navigation("TransmissionCar");

                    b.Navigation("TypeEngine");

                    b.Navigation("YearRelease");
                });
#pragma warning restore 612, 618
        }
    }
}
